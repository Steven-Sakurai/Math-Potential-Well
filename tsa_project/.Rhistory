d$MEI_MA <- as.vector(t(as.matrix(MEI[w,-1])))
d$MEI_MA <- filter(d$MEI_MA,rep(1/12,12))
d$MEI_MA <- d$MEI_MA[!is.na(d$MEI_MA)][-1]
w <- AMO$YEAR>=ybgn & AMO$YEAR<=yend
d$AMO <- as.vector(t(as.matrix(AMO[w,-1])))
w <- AMO$YEAR>=ybgn-4 & AMO$YEAR<=yend
d$AMO_MA <- as.vector(t(as.matrix(AMO[w,-1])))
d$AMO_MA <- filter(d$AMO_MA,rep(1/48,48))
d$AMO_MA <- d$AMO_MA[!is.na(d$AMO_MA)][-1]
w <- TRANS[,2]>=ybgn & TRANS[,2]<yend+1
d$TRANS <- TRANS[w,3]
w <- TRANS[,2]>=ybgn-1 & TRANS[,2]<yend+1
d$TRANS_MA <- TRANS[w,3]
d$TRANS_MA <- filter(d$TRANS_MA,rep(1/12,12))
d$TRANS_MA <- d$TRANS_MA[!is.na(d$TRANS_MA)][-1]
w <- TRANS[,2]>=ybgn-2 & TRANS[,2]<yend+1
d$TRANS_MA2 <- TRANS[w,3]
d$TRANS_MA2 <- filter(d$TRANS_MA2,c(rep(0,12),rep(1/12,12)))
d$TRANS_MA2 <- d$TRANS_MA2[!is.na(d$TRANS_MA2)][-1]
w <- TSI[,1]>=ybgn-1 & TSI[,1]<yend+1
d$TSI <- rep(TSI[w,2],each=12)
d$TSI <- filter(d$TSI,rep(1/12,12))
d$TSI <- d$TSI[!is.na(d$TSI)][-1]
w <- SN[,1]>=ybgn & SN[,1]<=yend
d$SN <- SN[w,4]
w <- SN[,1]>=ybgn-1 & SN[,1]<=yend
d$SN_MA <- SN[w,4]
d$SN_MA <- filter(d$SN_MA,rep(1/12,12))
d$SN_MA <- d$SN_MA[!is.na(d$SN_MA)][-1]
w <- SN[,1]>=ybgn-3 & SN[,1]<yend+1
d$SN_MA2 <- SN[w,4]
d$SN_MA2 <- filter(d$SN_MA2,c(rep(0,12),rep(1/24,24)))
d$SN_MA2 <- d$SN_MA2[!is.na(d$SN_MA2)][-1]
d <- data.frame(d)
d
c
names(d)
d$GISS_GLB
df1 = data.frame(d$year, d$month, d$date, GISS_GLB)
df1 = data.frame(d$year, GISS_GLB)
df1 = data.frame(d$date, GISS_GLB)
length(d$year)
length(d$month)
length(d$date)
ld$year
d$year
length(d$GISS_GLB)
plot.ts(d$GISS_GLB)
library(zoo)  # for na.approx
GISS_read <- function (file)
{
lines <- readLines (file)
lines <- grep ("^[0-9]{4}[ \t]", lines, value=TRUE)
lines <- gsub (
"^(.................................................................).*",
"\\1", lines)
lines <- gsub (" \\*\\*\\*\\*","   NA",lines)
lines <- gsub ("\\*\\*\\*\\*\\*","   NA",lines)
read.table (textConnection(lines), head=FALSE, row.names=1)
}
GISS_GLB <- GISS_read("data/GLB.Ts+dSST.txt")
GISS_NH  <- GISS_read("data/NH.Ts+dSST.txt")
GISS_SH  <- GISS_read("data/SH.Ts+dSST.txt")
GISS_GLB_Land <- GISS_read("data/GLB.Ts.txt")
GISS_NH_Land <- GISS_read("data/NH.Ts.txt")
GISS_SH_Land <- GISS_read("data/SH.Ts.txt")
#GISS_GLB_old <- GISS_read("data/GLB.Ts+dSST-old.txt")
#GISS_GLB_Land_old <- GISS_read("data/GLB.Ts-old.txt")
#GISS_NH_Land_old <- GISS_read("data/NH.Ts-old.txt")
#GISS_SH_Land_old <- GISS_read("data/SH.Ts-old.txt")
#GISS_GLB_old2 <- GISS_read("data/GLB.Ts+dSST-old2.txt")
#GISS_GLB_old3 <- GISS_read("data/GLB.Ts+dSST-old3.txt")
GISS_as_vector <- function (d) as.vector(t(as.matrix(d))) / 100
# Read CO2 data.  Fill in two missing data points in Samoa data, and
# 23 missing data points in South Pole data.
co2_brw <- read.table ("data/co2_brw_surface-flask_1_ccgg_month.txt")
co2_mlo <- read.table ("data/co2_mlo_surface-flask_1_ccgg_month.txt")
co2_smo <- read.table ("data/co2_smo_surface-flask_1_ccgg_month.txt")
co2_smo[496,1] <- "SMO"
co2_smo[496,2] <- 2010
co2_smo[496,3] <- 4
co2_smo[496,4] <- (387.34*2/3 + 387.79/3)
co2_smo[497,1] <- "SMO"
co2_smo[497,2] <- 2010
co2_smo[497,3] <- 5
co2_smo[497,4] <- (387.34/3 + 387.79*2/3)
o <- order(co2_smo[,2]+co2_smo[,3]/12)
co2_smo <- co2_smo[o,]
co2_spo <- read.table ("data/co2_spo_surface-flask_1_ccgg_month.txt")
co2_spo$sw <- rep(0.5,nrow(co2_spo))
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 1
co2_spo$sw[nrow(co2_spo)] <- 1/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 2
co2_spo$sw[nrow(co2_spo)] <- 2/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 3
co2_spo$sw[nrow(co2_spo)] <- 3/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 4
co2_spo$sw[nrow(co2_spo)] <- 4/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 5
co2_spo$sw[nrow(co2_spo)] <- 5/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 6
co2_spo$sw[nrow(co2_spo)] <- 6/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 7
co2_spo$sw[nrow(co2_spo)] <- 7/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 8
co2_spo$sw[nrow(co2_spo)] <- 8/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 9
co2_spo$sw[nrow(co2_spo)] <- 9/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 10
co2_spo$sw[nrow(co2_spo)] <- 10/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 11
co2_spo$sw[nrow(co2_spo)] <- 11/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1980
co2_spo[nrow(co2_spo),3] <- 12
co2_spo$sw[nrow(co2_spo)] <- 12/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1981
co2_spo[nrow(co2_spo),3] <- 1
co2_spo$sw[nrow(co2_spo)] <- 13/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1981
co2_spo[nrow(co2_spo),3] <- 2
co2_spo$sw[nrow(co2_spo)] <- 14/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1981
co2_spo[nrow(co2_spo),3] <- 3
co2_spo$sw[nrow(co2_spo)] <- 15/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1981
co2_spo[nrow(co2_spo),3] <- 4
co2_spo$sw[nrow(co2_spo)] <- 16/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1981
co2_spo[nrow(co2_spo),3] <- 5
co2_spo$sw[nrow(co2_spo)] <- 17/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 1981
co2_spo[nrow(co2_spo),3] <- 6
co2_spo$sw[nrow(co2_spo)] <- 18/19
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 2001
co2_spo[nrow(co2_spo),3] <- 2
co2_spo$sw[nrow(co2_spo)] <- 1/6
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 2001
co2_spo[nrow(co2_spo),3] <- 3
co2_spo$sw[nrow(co2_spo)] <- 2/6
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 2001
co2_spo[nrow(co2_spo),3] <- 4
co2_spo$sw[nrow(co2_spo)] <- 3/6
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 2001
co2_spo[nrow(co2_spo),3] <- 5
co2_spo$sw[nrow(co2_spo)] <- 4/6
co2_spo[nrow(co2_spo)+1,1] <- "SPO"
co2_spo[nrow(co2_spo),2] <- 2001
co2_spo[nrow(co2_spo),3] <- 6
co2_spo$sw[nrow(co2_spo)] <- 5/6
o <- order(co2_spo[,2]+co2_spo[,3]/12)
co2_spo <- co2_spo[o,]
co2_spo_if <- co2_spo
for (i in 1:nrow(co2_spo))
{ if (is.na(co2_spo[i,4]))
{  co2_spo_if[i,4] <- co2_spo_if[i-1,4]+co2_spo_if[i-12,4]-co2_spo_if[i-13,4]
}
}
co2_spo_ib <- co2_spo
for (i in nrow(co2_spo):1)
{ if (is.na(co2_spo[i,4]))
{  co2_spo_ib[i,4] <- co2_spo_ib[i+1,4]+co2_spo_ib[i+12,4]-co2_spo_ib[i+13,4]
}
}
co2_spo$na <- is.na(co2_spo[,4])
co2_spo[,4] <- (1-co2_spo$sw)*co2_spo_if[,4] + co2_spo$sw*co2_spo_ib[,4]
# Read historical CO2 data (back to 1800).  Fill in a number for 2014 based
# on change from 2013 seen in co2_mlo.  Create an interpolated monthly version.
co2_historical <- rbind(read.csv("co2-historical.csv",head=TRUE))
co2_interp <- rep (NA, 12*(2015-1800))
for (i in 1:nrow(co2_historical))
co2_interp[12*(co2_historical[i,1]-1800)+6] <- co2_historical[i,2]
co2_interp[1] <- co2_interp[6]
co2_interp[length(co2_interp)] <- co2_interp[length(co2_interp)-6]
co2_interp <- zoo::na.approx(co2_interp)  # linear interpolation
# Combine some data from January 1880 to December 2014 into one data frame, H.
# Interplate CO2 data when necessary.
ybgn <- 1880
yend <- 2017
H <- list()
H$year <- rep(ybgn:yend,each=12)
H$month <- rep(1:12,times=yend-ybgn+1)
H$date <- H$year + (H$month-0.5)/12
w <- as.character(ybgn:yend)
H$GISS_GLB <- GISS_as_vector(GISS_GLB[w,])
H$GISS_NH  <- GISS_as_vector(GISS_NH[w,])
H$GISS_SH  <- GISS_as_vector(GISS_SH[w,])
H$GISS_NH_Land  <- GISS_as_vector(GISS_NH_Land[w,])
H$GISS_SH_Land  <- GISS_as_vector(GISS_SH_Land[w,])
#H$GISS_GLB_old <- GISS_as_vector(GISS_GLB_old[w,])
# H$GISS_NH_old  <- GISS_as_vector(GISS_NH_old[w,])
# H$GISS_SH_old  <- GISS_as_vector(GISS_SH_old[w,])
#H$GISS_GLB_old2 <- GISS_as_vector(rbind(GISS_GLB_old2,`2015`=NA)[w,])
#H$GISS_GLB_old3 <- GISS_as_vector(rbind(GISS_GLB_old3,`2015`=NA)[w,])
H$CO2 <- co2_interp [(12*(ybgn-1800)+1) : (12*(yend-1800)+12)]
H <- data.frame(H)
# Combine some data from January 1959 to December 2014 into one data frame, D.
ybgn <- 1959
yend <- 2017
D <- list()
D$year <- rep(ybgn:yend,each=12)
D$month <- rep(1:12,times=yend-ybgn+1)
D$date <- D$year + (D$month-0.5)/12
D$sinm  <- sin(2*pi*D$month/12)
D$cosm  <- cos(2*pi*D$month/12)
D$sinm2 <- sin(2*2*pi*D$month/12)
D$cosm2 <- cos(2*2*pi*D$month/12)
D$sinm3 <- sin(3*2*pi*D$month/12)
D$cosm3 <- cos(3*2*pi*D$month/12)
w <- as.character(ybgn:yend)
D$GISS_GLB <- GISS_as_vector(GISS_GLB[w,])
D$GISS_NH <- GISS_as_vector(GISS_NH[w,])
D$GISS_SH <- GISS_as_vector(GISS_SH[w,])
#D$GISS_GLB_old <- GISS_as_vector(GISS_GLB_old[w,])
# D$GISS_NH_old  <- GISS_as_vector(GISS_NH_old[w,])
# D$GISS_SH_old  <- GISS_as_vector(GISS_SH_old[w,])
w <- AMO$YEAR>=ybgn & AMO$YEAR<=yend
D$AMO <- as.vector(t(as.matrix(AMO[w,-1])))
w <- AMO$YEAR>=ybgn-4 & AMO$YEAR<=yend
D$AMO_MA <- as.vector(t(as.matrix(AMO[w,-1])))
D$AMO_MA <- filter(D$AMO_MA,rep(1/48,48))
D$AMO_MA <- D$AMO_MA[!is.na(D$AMO_MA)][-1]
w <- TRANS[,2]>=ybgn & TRANS[,2]<yend+1
D$TRANS <- TRANS[w,3]
w <- TRANS[,2]>=ybgn-1 & TRANS[,2]<yend+1
D$TRANS_MA <- TRANS[w,3]
D$TRANS_MA <- filter(D$TRANS_MA,rep(1/12,12))
D$TRANS_MA <- D$TRANS_MA[!is.na(D$TRANS_MA)][-1]
w <- TRANS[,2]>=ybgn-2 & TRANS[,2]<yend+1
D$TRANS_MA2 <- TRANS[w,3]
D$TRANS_MA2 <- filter(D$TRANS_MA2,c(rep(0,12),rep(1/12,12)))
D$TRANS_MA2 <- c(D$TRANS_MA[1:11],D$TRANS_MA2[!is.na(D$TRANS_MA2)])
w <- TSI[,1]>=ybgn-1 & TSI[,1]<yend+1
D$TSI <- rep(TSI[w,2],each=12)
D$TSI <- filter(D$TSI,rep(1/12,12))
D$TSI <- D$TSI[!is.na(D$TSI)][-1]
w <- SN[,1]>=ybgn & SN[,1]<=yend
D$SN <- SN[w,4]
w <- SN[,1]>=ybgn-1 & SN[,1]<=yend
D$SN_MA <- SN[w,4]
D$SN_MA <- filter(D$SN_MA,rep(1/12,12))
D$SN_MA <- D$SN_MA[!is.na(D$SN_MA)][-1]
w <- SN[,1]>=ybgn-3 & SN[,1]<yend+1
D$SN_MA2 <- SN[w,4]
D$SN_MA2 <- filter(D$SN_MA2,c(rep(0,12),rep(1/24,24)))
D$SN_MA2 <- D$SN_MA2[!is.na(D$SN_MA2)][-1]
D <- data.frame(D)
# Combine all data from January 1979 to December 2014 into one data frame, d.
ybgn <- 1979
yend <- 2014
d <- list()
d$year <- rep(ybgn:yend,each=12)
d$month <- rep(1:12,times=yend-ybgn+1)
d$date <- d$year + (d$month-0.5)/12
d$sinm  <- sin(2*pi*d$month/12)
d$cosm  <- cos(2*pi*d$month/12)
d$sinm2 <- sin(2*2*pi*d$month/12)
d$cosm2 <- cos(2*2*pi*d$month/12)
d$sinm3 <- sin(3*2*pi*d$month/12)
d$cosm3 <- cos(3*2*pi*d$month/12)
w <- UAH$Year>=ybgn & UAH$Year<=yend
d$UAH_GLB <- UAH$Globe[w]
d$UAH_NH <- UAH$NH[w]
d$UAH_SH <- UAH$SH[w]
d$UAH_Trpcs <- UAH$Trpcs[w]
d$UAH_NH_Ocean <- UAH$Ocean.1[w]
d$UAH_SH_Ocean <- UAH$Ocean.2[w]
d$UAH_NH_Land <- UAH$Land.1[w]
d$UAH_SH_Land <- UAH$Land.2[w]
d$UAH_Trpcs_Ocean <- UAH$Ocean.3[w]
d$UAH_NoPol <- UAH$NoPol[w]
d$UAH_SoPol <- UAH$SoPol[w]
w <- as.character(ybgn:yend)
d$GISS_GLB <- GISS_as_vector(GISS_GLB[w,])
d$GISS_NH <- GISS_as_vector(GISS_NH[w,])
d$GISS_SH <- GISS_as_vector(GISS_SH[w,])
d$GISS_GLB_Land <- GISS_as_vector(GISS_GLB_Land[w,])
d$GISS_NH_Land <- GISS_as_vector(GISS_NH_Land[w,])
d$GISS_SH_Land <- GISS_as_vector(GISS_SH_Land[w,])
d$GISS_GLB_old <- GISS_as_vector(GISS_GLB_old[w,])
d$GISS_GLB_old2 <- GISS_as_vector(GISS_GLB_old2[w,])
d$GISS_GLB_old3 <- GISS_as_vector(GISS_GLB_old3[w,])
# d$GISS_NH_old  <- GISS_as_vector(GISS_NH_old[w,])
# d$GISS_SH_old  <- GISS_as_vector(GISS_SH_old[w,])
d$GISS_GLB_Land_old <- GISS_as_vector(GISS_GLB_Land_old[w,])
d$GISS_NH_Land_old <- GISS_as_vector(GISS_NH_Land_old[w,])
d$GISS_SH_Land_old <- GISS_as_vector(GISS_SH_Land_old[w,])
w <- MEI$YEAR>=ybgn & MEI$YEAR<=yend
d$MEI <- as.vector(t(as.matrix(MEI[w,-1])))
w <- MEI$YEAR>=ybgn-1 & MEI$YEAR<=yend
d$MEI_MA <- as.vector(t(as.matrix(MEI[w,-1])))
d$MEI_MA <- filter(d$MEI_MA,rep(1/12,12))
d$MEI_MA <- d$MEI_MA[!is.na(d$MEI_MA)][-1]
w <- AMO$YEAR>=ybgn & AMO$YEAR<=yend
d$AMO <- as.vector(t(as.matrix(AMO[w,-1])))
w <- AMO$YEAR>=ybgn-4 & AMO$YEAR<=yend
d$AMO_MA <- as.vector(t(as.matrix(AMO[w,-1])))
d$AMO_MA <- filter(d$AMO_MA,rep(1/48,48))
d$AMO_MA <- d$AMO_MA[!is.na(d$AMO_MA)][-1]
w <- TRANS[,2]>=ybgn & TRANS[,2]<yend+1
d$TRANS <- TRANS[w,3]
w <- TRANS[,2]>=ybgn-1 & TRANS[,2]<yend+1
d$TRANS_MA <- TRANS[w,3]
d$TRANS_MA <- filter(d$TRANS_MA,rep(1/12,12))
d$TRANS_MA <- d$TRANS_MA[!is.na(d$TRANS_MA)][-1]
w <- TRANS[,2]>=ybgn-2 & TRANS[,2]<yend+1
d$TRANS_MA2 <- TRANS[w,3]
d$TRANS_MA2 <- filter(d$TRANS_MA2,c(rep(0,12),rep(1/12,12)))
d$TRANS_MA2 <- d$TRANS_MA2[!is.na(d$TRANS_MA2)][-1]
w <- TSI[,1]>=ybgn-1 & TSI[,1]<yend+1
d$TSI <- rep(TSI[w,2],each=12)
d$TSI <- filter(d$TSI,rep(1/12,12))
d$TSI <- d$TSI[!is.na(d$TSI)][-1]
w <- SN[,1]>=ybgn & SN[,1]<=yend
d$SN <- SN[w,4]
w <- SN[,1]>=ybgn-1 & SN[,1]<=yend
d$SN_MA <- SN[w,4]
d$SN_MA <- filter(d$SN_MA,rep(1/12,12))
d$SN_MA <- d$SN_MA[!is.na(d$SN_MA)][-1]
w <- SN[,1]>=ybgn-3 & SN[,1]<yend+1
d$SN_MA2 <- SN[w,4]
d$SN_MA2 <- filter(d$SN_MA2,c(rep(0,12),rep(1/24,24)))
d$SN_MA2 <- d$SN_MA2[!is.na(d$SN_MA2)][-1]
d <- data.frame(d)
df1 = data.frame(d$year, GISS_GLB)
df1 = data.frame(d$year, d$GISS_GLB)
df1
# read_cru_hemi.r
#
# Reads a CRU-format hemispheric average file, as provided at
# http://www.cru.uea.ac.uk/cru/data/temperature
#
# Format has two lines for each year.
#  1) monthly mean anomalies plus an annual mean
#  2) coverage percentages
#
# Returns a data frame with columns:
#  year (1850 to final year)
#  annual (mean annual anomaly)
#  month.1 ... month.12 (mean monthly anomaly)
#  cover.1 ... cover.12 (percentage coverage)
#
read_cru_hemi <- function(filename) {
# read in whole file as table
tab <- read.table(filename,fill=TRUE)
nrows <- nrow(tab)
# create frame
hemi <- data.frame(
year=tab[seq(1,nrows,2),1],
annual=tab[seq(1,nrows,2),14],
month=array(tab[seq(1,nrows,2),2:13]),
cover=array(tab[seq(2,nrows,2),2:13])
)
# mask out months with 0 coverage
hemi$month.1 [which(hemi$cover.1 ==0)] <- NA
hemi$month.2 [which(hemi$cover.2 ==0)] <- NA
hemi$month.3 [which(hemi$cover.3 ==0)] <- NA
hemi$month.4 [which(hemi$cover.4 ==0)] <- NA
hemi$month.5 [which(hemi$cover.5 ==0)] <- NA
hemi$month.6 [which(hemi$cover.6 ==0)] <- NA
hemi$month.7 [which(hemi$cover.7 ==0)] <- NA
hemi$month.8 [which(hemi$cover.8 ==0)] <- NA
hemi$month.9 [which(hemi$cover.9 ==0)] <- NA
hemi$month.10[which(hemi$cover.10==0)] <- NA
hemi$month.11[which(hemi$cover.11==0)] <- NA
hemi$month.12[which(hemi$cover.12==0)] <- NA
#
return(hemi)
}
pwd
pwd()
ls()
list.of.packages <- c("ggplot2", "dplyr", "tidyr","animation","ggvis")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(dplyr)
library(tidyr)
library(ggplot2)
library(animation)
setwd("~/cloud/R/climate change/")
#Data from https://crudata.uea.ac.uk/cru/data/temperature/
#As well as data read in script
source("read_cru_hemi.r")
url_dat <- "https://crudata.uea.ac.uk/cru/data/temperature/HadCRUT4-gl.dat"
temp_dat <- read_cru_hemi(url_dat)
#temp_dat <- read_cru_hemi("./HadCRUT4-gl.dat")
#remove cover
temp_dat_monthly <- temp_dat %>%
select(-starts_with("cover")) %>%
select(-starts_with("annual")) %>%
gather(month, anomaly, -year) %>%
mutate(month = gsub("month\\.", "", month)) %>%
mutate(month = as.numeric(month)) %>%
filter(year !=2016)
mo <- months(seq(as.Date("1910/1/1"), as.Date("1911/1/1"), "months"))
mo <- gsub("(^...).*", "\\1", mo)
saveGIF({
#  for(i in 1850:2015){
for(i in 1850:2016){
print(ggplot(temp_dat_monthly %>% filter(year <= i),
aes(x=month, y=anomaly, color=year, group=year)) +
geom_line() +
#scale_color_gradient(low="blue", high="red", limits=c(1850, 2015), guide="none") +
scale_color_gradient(low="blue", high="red", limits=c(1850, 2016), guide="none") +
geom_hline(yintercept=1.5, color="black", lty=2) +
geom_hline(yintercept=2, color="black", lty=2) +
coord_polar() +
annotate(x=1, y=-1.5, geom="text", label=i) +
annotate(x=1, y=1.5, geom="label", label="1.5C", fill="white", label.size=0) +
annotate(x=1, y=2, geom="label", label="2.0C", fill="white", label.size=0) +
ggtitle(expression(atop("Global Temperature Change 1850-2016, East Anglia's HadCRUT4-gl.dat", atop(italic("by McCartney Taylor 11JUL16"), "")))) +
#    ggtitle("Global Temperature Change 1850-2016 using University of East Anglia's HadCRUT4-gl.dat") +
scale_x_continuous(labels=mo, breaks=1:13) +
scale_y_continuous(labels=NULL, breaks=NULL) +
ylab("") + xlab("")
)}
}, interval=0.1)
library("curl")
tmpf <- tempfile()
curl_download("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.annual_ns_avg.txt", tmpf)
gtemp <- read.table(tmpf, colClasses = rep("numeric", 12))[, 1:2] # only want some of the variables
names(gtemp) <- c("Year", "Temperature")
install.packages("curl")
library("curl")
tmpf <- tempfile()
curl_download("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.4.0.0.annual_ns_avg.txt", tmpf)
gtemp <- read.table(tmpf, colClasses = rep("numeric", 12))[, 1:2] # only want some of the variables
names(gtemp) <- c("Year", "Temperature")
library("curl")
tmpf <- tempfile()
curl_download("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.5.0.0.annual_ns_avg.txt", tmpf)
gtemp <- read.table(tmpf, colClasses = rep("numeric", 12))[, 1:2] # only want some of the variables
names(gtemp) <- c("Year", "Temperature")
gtemp
library("curl")
tmpf <- tempfile()
curl_download("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.5.0.0.annual_ns_avg.txt", tmpf)
gtemp <- read.table(tmpf, colClasses = rep("numeric", 12))[, 1:2] # only want some of the variables
names(gtemp) <- c("Year", "Temperature")
library("ggplot2")
theme_set(theme_bw())
p1 <- ggplot(gtemp, aes(x = Year, y = Temperature)) +
geom_point()
p1 + geom_line()
install.packages('mgcv')
library("curl")
tmpf <- tempfile()
curl_download("http://www.metoffice.gov.uk/hadobs/hadcrut4/data/current/time_series/HadCRUT.4.5.0.0.annual_ns_avg.txt", tmpf)
gtemp <- read.table(tmpf, colClasses = rep("numeric", 12))[, 1:2] # only want some of the variables
names(gtemp) <- c("Year", "Temperature")
library("ggplot2")
theme_set(theme_bw())
p1 <- ggplot(gtemp, aes(x = Year, y = Temperature)) +
geom_point()
p1 + geom_line()
library("mgcv")
m1 <- gamm(Temperature ~ s(Year), data = gtemp, correlation = corARMA(form = ~ Year, p = 1))
m2 <- gamm(Temperature ~ s(Year), data = gtemp, correlation = corARMA(form = ~ Year, p = 2))
anova(m1$lme, m2$lme)
ACF <- acf(resid(m1$lme, type = "normalized"), plot = FALSE)
ACF <- setNames(data.frame(unclass(ACF)[c("acf", "lag")]), c("ACF","Lag"))
ggplot(ACF, aes(x = Lag, y = ACF)) +
geom_hline(aes(yintercept = 0)) +
geom_segment(mapping = aes(xend = Lag, yend = 0))
tmpf <- tempfile()
curl_download("https://gist.githubusercontent.com/gavinsimpson/d23ae67e653d5bfff652/raw/25fd719c3ab699e48927e286934045622d33b3bf/simulate.gamm.R", tmpf)
source(tmpf)
set.seed(10)
newd <- with(gtemp, data.frame(Year = seq(min(Year), max(Year), length.out = 200)))
sims <- simulate(m1, nsim = 10000, newdata = newd)
ci <- apply(sims, 1L, quantile, probs = c(0.025, 0.975))
newd <- transform(newd,
fitted = predict(m1$gam, newdata = newd),
lower  = ci[1, ],
upper  = ci[2, ])
p1 + geom_ribbon(data = newd, aes(ymin = lower, ymax = upper, x = Year, y = fitted),
alpha = 0.2, fill = "grey") +
geom_line(data = newd, aes(y = fitted, x = Year))
?ci
?apply
